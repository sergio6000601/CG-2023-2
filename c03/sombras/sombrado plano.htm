<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Three.js ShaderMaterial</title>
  </head>
  <body>
    <div id="container"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

    <script>
// Configura la escena
		const scene = new THREE.Scene();

// Configura la c치mara
		const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
		camera.position.z = 5;

// Configura el lienzo (canvas)
		const renderer = new THREE.WebGLRenderer();
		renderer.setSize(window.innerWidth, window.innerHeight);
		document.body.appendChild(renderer.domElement);

// Crea un cubo
		const geometry = new THREE.BoxGeometry();
		const material = new THREE.MeshLambertMaterial({ color: 0xffff00 }); // Utilizamos un material con sombreado plano (Lambertiano)
		const cube = new THREE.Mesh(geometry, material);
		scene.add(cube);

// Crea un suelo
		const floorGeometry = new THREE.PlaneGeometry(10, 10);
		const floorMaterial = new THREE.MeshLambertMaterial({ color: 0x008888 });
		const floor = new THREE.Mesh(floorGeometry, floorMaterial);
		floor.rotation.x = -Math.PI / 2;
		floor.position.y = -1.5; // Ajusta la posici칩n del suelo
		scene.add(floor);

// Crea una luz
		const light = new THREE.PointLight(0xffffff, 1);
		light.position.set(2, 2, 4);
		scene.add(light);

// Configura la animaci칩n
		const animate = () => {
		requestAnimationFrame(animate);

  // Rota el cubo
		cube.rotation.x += 0.01;
		cube.rotation.y += 0.01;

		renderer.render(scene, camera);
		};

// Inicia la animaci칩n
		animate();
	</script>
  </body>
</html>
