<!DOCTYPE html>
<html>

<head>
    <title>Primera Escena con Three.js</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        body {
            /* Configure margin to 0 and overflow to hidden to occupy the full screen */
            margin: 0;
            overflow: hidden;
        }
    </style>
</head>

<body>

    <!-- Div that will contain the output -->
    <div id="WebGL-salida"></div>

    <!-- JavaScript code that executes our Three.js examples -->
    <script type="text/javascript">
        // Once everything has been loaded, we execute our Three.js content.
        $(function () {

            // Create a scene to hold all our elements, such as objects, cameras, and lights.
            var scene = new THREE.Scene();

            // Create a camera that defines where we will look from.
            var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);

            // Create a renderer and configure the size.
            var renderer = new THREE.WebGLRenderer();

            renderer.setClearColor(0xEEEEEE);
            renderer.setSize(window.innerWidth, window.innerHeight);

            var axes = new THREE.AxisHelper(20);
            scene.add(axes);

            // Create the ground plane.
            var planeGeometry = new THREE.PlaneGeometry(60, 20);
            var planeMaterial = new THREE.MeshBasicMaterial({ color: 0xcccccc });
            var plane = new THREE.Mesh(planeGeometry, planeMaterial);

            // Rotate and position the plane.
            plane.rotation.x = -0.5 * Math.PI;
            plane.position.x = 15;
            plane.position.y = 0;
            plane.position.z = 0;

            // Add the plane to the scene.
            scene.add(plane);

            // Create a cube.
            var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);
            var cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe: true });
            var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

            // Position the cube.
            cube.position.x = -4;
            cube.position.y = 3;
            cube.position.z = 0;

            // Add the cube to the scene.
            scene.add(cube);

            // Create a sphere.
            var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
            var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x7777ff, wireframe: true });
            var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);

            // Position the sphere.
            sphere.position.x = 20;
            sphere.position.y = 4;
            sphere.position.z = 2;

            // Add the sphere to the scene.
            scene.add(sphere);

            // Position and point the camera at the center of the scene.
            camera.position.x = -30;
            camera.position.y = 40;
            camera.position.z = 30;
            camera.lookAt(scene.position);

            // Add the rendering output to the HTML element.
            $("#WebGL-salida").append(renderer.domElement);

            // Render the scene.
            renderer.render(scene, camera);
        });
    </script>
</body>

</html>
